--- a/amd64/CMakeLists.txt
+++ b/amd64/CMakeLists.txt
@@ -253,3 +254,11 @@ if(DOXYGEN_FOUND)
 else()
   message(WARNING "Doxygen must be installed to generate API documentation.")
 endif()
+
+#
+# Install targets.
+#
+
+install(DIRECTORY ${CEF_INCLUDE_DIR}/ DESTINATION ${CEF_INSTALL_INCLUDEDIR})
+install(DIRECTORY ${CEF_BINARY_DIR}/ ${CEF_RESOURCE_DIR}/ DESTINATION ${CEF_INSTALL_LIBDIR})
+install(PROGRAMS  ${CEF_BINARY_DIR}/chrome-sandbox DESTINATION ${CEF_INSTALL_LIBDIR})
--- a/amd64/cmake/cef_variables.cmake
+++ b/amd64/cmake/cef_variables.cmake
@@ -631,3 +631,17 @@ if(OS_WINDOWS)
       )
   endif()
 endif()
+
+#
+# Install configuration.
+#
+
+include(GNUInstallDirs)
+
+set(VERSION 117)
+set(CEF_INCLUDE_DIR ${_CEF_ROOT}/include)
+set(CEF_INSTALL_DIR_SUFFIX cef/${VERSION})
+
+set(CEF_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_INCLUDEDIR}/${CEF_INSTALL_DIR_SUFFIX})
+set(CEF_INSTALL_LIBDIR ${CMAKE_INSTALL_LIBDIR}/${CEF_INSTALL_DIR_SUFFIX})
+set(CEF_INSTALL_CMAKEDIR ${CMAKE_INSTALL_LIBDIR}/cmake/CEF${VERSION})
--- /dev/null
+++ b/amd64/libcef_dll/CEFConfig.cmake
@@ -0,0 +1,2 @@
+include("${CMAKE_CURRENT_LIST_DIR}/CEFTargets.cmake")
+add_library(CEF::CEF ALIAS CEF::libcef_dll_wrapper)
--- a/amd64/libcef_dll/CMakeLists.txt
+++ b/amd64/libcef_dll/CMakeLists.txt
@@ -782,3 +782,30 @@ target_compile_definitions(${CEF_TARGET}
 
 # Remove the default "lib" prefix from the resulting library.
 set_target_properties(${CEF_TARGET} PROPERTIES PREFIX "")
+
+#
+# Install targets.
+#
+
+target_include_directories(${CEF_TARGET} PUBLIC
+  $<BUILD_INTERFACE:${CEF_INCLUDE_DIR}>
+  $<INSTALL_INTERFACE:${CEF_INSTALL_INCLUDEDIR}>
+)
+target_link_directories(${CEF_TARGET} PUBLIC
+  $<BUILD_INTERFACE:${CEF_BINARY_DIR}>
+  $<INSTALL_INTERFACE:${CEF_INSTALL_LIBDIR}>
+)
+target_link_libraries(${CEF_TARGET} PUBLIC cef)
+
+install(TARGETS ${CEF_TARGET} EXPORT CEF DESTINATION ${CEF_INSTALL_LIBDIR})
+install(EXPORT CEF FILE CEFTargets.cmake NAMESPACE CEF:: DESTINATION ${CEF_INSTALL_CMAKEDIR})
+install(FILES CEFConfig.cmake DESTINATION ${CEF_INSTALL_CMAKEDIR})
+
+include(CMakePackageConfigHelpers)
+write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/CEFConfigVersion.cmake
+  VERSION ${VERSION}
+  COMPATIBILITY SameMajorVersion
+)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/CEFConfigVersion.cmake DESTINATION ${CEF_INSTALL_CMAKEDIR})
+
+add_library(CEF::CEF ALIAS ${CEF_TARGET})
